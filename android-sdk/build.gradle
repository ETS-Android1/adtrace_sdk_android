plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdkVersion rootProject.ext.coreCompileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.coreMinSdkVersion
        targetSdkVersion rootProject.ext.coreTargetSdkVersion
        versionName rootProject.ext.coreVersionName
        versionCode rootProject.ext.defaultVersionCode
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task adtraceCoreAarRelease(type: Copy) {
    dependsOn 'assembleRelease'

    from('build/outputs/aar/')
    include 'sdk-release.aar'
    destinationDir file('build/libs/')
    rename 'sdk-release.aar', 'adtrace-sdk-release.aar'
}


task adtraceCoreAarDebug(type: Copy) {
    dependsOn 'assembleDebug'

    from('build/outputs/aar/')
    include 'sdk-debug.aar'
    destinationDir file('build/libs/')
    rename 'sdk-debug.aar', 'adtrace-sdk-debug.aar'
}

task adtraceCoreJarRelease(type: Jar) {
    dependsOn 'compileReleaseJavaWithJavac'
    from('build/intermediates/javac/release/classes/')
    archiveName "adtrace-sdk-release.jar"
}

task adtraceCoreJarDebug(type: Jar) {
    dependsOn 'compileDebugJavaWithJavac'
    from('build/intermediates/javac/debug/classes/')
    archiveName "adtrace-sdk-debug.jar"
}

//task androidJavadocs(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation.
//    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
//        options.addStringOption('Xdoclint:none', '-quiet')
//    }
//}


//task adtraceCoreAndroidJavadocsJar(type: Jar) {
//    dependsOn 'androidJavadocs'
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}

task adtraceCoreAndroidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives adtraceCoreJarRelease
//    archives adtraceCoreAndroidJavadocsJar
    archives adtraceCoreAndroidSourcesJar
}





publishing {
    publications {
        mavenAndroidCore(MavenPublication) {
            customizePom(pom)
            groupId rootProject.ext.adtraceGroupId
            artifactId 'adtrace-android'
            version rootProject.ext.coreVersionName

            artifact adtraceCoreJarRelease
//            artifact adtraceCoreAndroidJavadocsJar
            artifact adtraceCoreAndroidSourcesJar
        }

        mavenAndroidCoreAAR(MavenPublication) {
            customizePomForAar(pom)
            groupId rootProject.ext.adtraceGroupId
            artifactId 'adtrace-android'
            version rootProject.ext.coreVersionName

            // Create the signed POM artifact.
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }
            artifact("$buildDir/outputs/aar/android-sdk-release.aar")
//            artifact adtraceCoreAndroidJavadocsJar
            artifact adtraceCoreAndroidSourcesJar
        }

    }

//    repositories {
//        maven {
//            if (rootProject.ext.coreVersionName.toString().contains('SNAPSHOT')) {
//                println "Using Maven SNAPSHOT repository for publishing"
//                url "https://oss.sonatype.org/content/repositories/snapshots/"
//            } else {
//                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
//            }
//            if (project.hasProperty("sonatypeUsername")) {
//                credentials {
//                    username sonatypeUsername
//                    password sonatypePassword
//                }
//            }
//        }
//    }
}

def customizePom(pom) {
    pom.withXml {
        // Add all items necessary for maven central publication.
        asNode().children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST
            description 'The AdTrace SDK for Android'
            name 'AdTrace Android SDK'
            url 'https://github.com/adtrace/adtrace_sdk_android'
            organization {
                name 'adtrace'
                url 'http://www.adtrace.io'
            }
            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                }
            }
            scm {
                url 'git@github.com:adtrace/adtrace_sdk_android.git'
                connection 'scm:git:git@github.com:adtrace/adtrace_sdk_android.git'
                developerConnection 'scm:git:git@github.com:adtrace/adtrace_sdk_android.git'
            }
            developers {
                developer {
                    name 'Nasser Amini'
                    email 'namini40@gmail.com'
                }

            }
        }
    }
}

def customizePomForAar(pom) {
    pom.withXml {
        // Remove the existing packaging field, as it has to be overridden with type aar
        asNode().remove(asNode().get("packaging"))

        // Add all items necessary for maven central publication.
        asNode().children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST
            description 'The AdTrace SDK for Android'
            name 'AdTrace Android SDK'
            url 'https://github.com/adtrace/adtrace_sdk_android'
            packaging 'aar'
            organization {
                name 'adtrace'
                url 'http://www.adtrace.io'
            }
            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                }
            }
            scm {
                url 'git@github.com:adtrace/adtrace_sdk_android.git'
                connection 'scm:git:git@github.com:adtrace/adtrace_sdk_android.git'
                developerConnection 'scm:git:git@github.com:adtrace/adtrace_sdk_android.git'
            }
            developers {
                developer {
                    name 'Nasser Amini'
                    email 'namini40@gmail.com'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenAndroidCorePublication {
        destination = file("${project.buildDir}/generated-pom.xml")
    }
    /* TODO check if/how to replace this tasks
    tasks.publishMavenAndroidCorePublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenAndroidCorePublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
    */
    tasks.generatePomFileForMavenAndroidCoreAARPublication {
        destination = file("${project.buildDir}/generated-pom.xml")
    }
    /* TODO check if/how to replace this tasks
    tasks.publishMavenAndroidCoreAARPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenAndroidCoreAARPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
    */
}

signing {
    sign publishing.publications.mavenAndroidCore
    sign publishing.publications.mavenAndroidCoreAAR
}
